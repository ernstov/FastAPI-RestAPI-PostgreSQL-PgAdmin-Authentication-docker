namespace: fastapi-restapi
fastapi-restapi:
  defines: runnable
  metadata:
    name: fastapi-restapi
    description: >-
      A FastAPI application providing REST API functionalities, along with
      PostgreSQL support and user authentication.
    icon: https://emojiapi.dev/api/v1/snake.svg
  containers:
    fastapi-restapi:
      build: .
  services:
    main-port:
      container: fastapi-restapi
      port: 8000
      host-port: 8000
      publish: false
      protocol: TCP
      description: Main port where the app runs.
  connections:
    database:
      target: fastapi-restapi/db
      service: postgres
  variables:
    domain:
      env: DOMAIN
      type: string
      description: Local host domain of the application
      value: localhost
    project-name:
      env: PROJECT_NAME
      type: string
      description: Name of the Project
      value: API docs
    secret-key:
      env: SECRET_KEY
      type: string
      description: Secret Key used for security
      value: '!!!SETME!!!'
    first-superuser:
      env: FIRST_SUPERUSER
      type: string
      description: Email of the first super user
      value: '!!!SETME!!!'
    first-superuser-password:
      env: FIRST_SUPERUSER_PASSWORD
      type: string
      description: Password for the superuser
      value: '!!!SETME!!!'
    smtp-tls:
      env: SMTP_TLS
      type: string
      description: Use TLS for SMTP or not
      value: 'True'
    smtp-port:
      env: SMTP_PORT
      type: int
      description: SMTP Port
      value: 25
    smtp-host:
      env: SMTP_HOST
      type: string
      description: SMTP Host
      value: '!!!SETME!!!'
    smtp-user:
      env: SMTP_USER
      type: string
      description: SMTP User name
      value: '!!!SETME!!!'
    smtp-password:
      env: SMTP_PASSWORD
      type: string
      description: SMTP Password
      value: '!!!SETME!!!'
    emails-from-email:
      env: EMAILS_FROM_EMAIL
      type: string
      description: Default from email used in the app
      value: no-reply@gmail.com
    users-open-registration:
      env: USERS_OPEN_REGISTRATION
      type: string
      description: Flag that allows open user registration
      value: 'True'
    server-name:
      env: SERVER_NAME
      type: string
      description: Server name
      value: API
    server-host:
      env: SERVER_HOST
      type: string
      description: Server host URL
      value: http://localhost:8900
    postgres-user:
      env: POSTGRES_USER
      type: string
      description: Postgres username
      value: '!!!SETME!!!'
    postgres-password:
      env: POSTGRES_PASSWORD
      type: string
      description: Postgres password
      value: '!!!SETME!!!'
    postgres-db:
      env: POSTGRES_DB
      type: string
      description: Name of the Postgres database
      value: '!!!SETME!!!'
    postgres-port:
      env: POSTGRES_PORT
      type: int
      description: Port on which Postgresql is running
      value: <- connection-port("database")
    postgres-server:
      env: POSTGRES_SERVER
      type: string
      description: Postgres host server
      value: <- connection-hostname("database")
    pgadmin-default-email:
      env: PGADMIN_DEFAULT_EMAIL
      type: string
      description: PgAdmin default login email
      value: '!!!SETME!!!'
    pgadmin-default-password:
      env: PGADMIN_DEFAULT_PASSWORD
      type: string
      description: PgAdmin default login password
      value: '!!!SETME!!!'
    sentry-dsn:
      env: SENTRY_DSN
      type: string
      description: Sentry DSN for error tracking
      value: '!!!SETME!!!'
db:
  defines: runnable
  inherits: postgresql/db
stack:
  defines: group
  runnable-list:
    - fastapi-restapi/fastapi-restapi
    - fastapi-restapi/db
